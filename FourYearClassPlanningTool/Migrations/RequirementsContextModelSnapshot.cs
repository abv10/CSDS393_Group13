// <auto-generated />
using FourYearClassPlanningTool.Models.Requirements;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FourYearClassPlanningTool.Migrations
{
    [DbContext(typeof(RequirementsContext))]
    partial class RequirementsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseCourseGroup", b =>
                {
                    b.Property<string>("CourseGroupsCourseGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoursesCourseId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CourseGroupsCourseGroupId", "CoursesCourseId");

                    b.HasIndex("CoursesCourseId");

                    b.ToTable("CourseCourseGroup");
                });

            modelBuilder.Entity("CourseDegree", b =>
                {
                    b.Property<string>("CoursesCourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreesDegreeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CoursesCourseId", "DegreesDegreeId");

                    b.HasIndex("DegreesDegreeId");

                    b.ToTable("CourseDegree");
                });

            modelBuilder.Entity("CourseGroupDegree", b =>
                {
                    b.Property<string>("CourseGroupsCourseGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreesDegreeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CourseGroupsCourseGroupId", "DegreesDegreeId");

                    b.HasIndex("DegreesDegreeId");

                    b.ToTable("CourseGroupDegree");
                });

            modelBuilder.Entity("FourYearClassPlanningTool.Models.Requirements.Entities.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prequisites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemestersOffered")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FourYearClassPlanningTool.Models.Requirements.Entities.CourseGroup", b =>
                {
                    b.Property<string>("CourseGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CoursesRequired")
                        .HasColumnType("int");

                    b.Property<int>("CreditsRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseGroupId");

                    b.ToTable("CourseGroups");
                });

            modelBuilder.Entity("FourYearClassPlanningTool.Models.Requirements.Entities.Degree", b =>
                {
                    b.Property<string>("DegreeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Concentration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMajor")
                        .HasColumnType("bit");

                    b.Property<int>("MaxOverlap")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DegreeId");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("CourseCourseGroup", b =>
                {
                    b.HasOne("FourYearClassPlanningTool.Models.Requirements.Entities.CourseGroup", null)
                        .WithMany()
                        .HasForeignKey("CourseGroupsCourseGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourYearClassPlanningTool.Models.Requirements.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseDegree", b =>
                {
                    b.HasOne("FourYearClassPlanningTool.Models.Requirements.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourYearClassPlanningTool.Models.Requirements.Entities.Degree", null)
                        .WithMany()
                        .HasForeignKey("DegreesDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseGroupDegree", b =>
                {
                    b.HasOne("FourYearClassPlanningTool.Models.Requirements.Entities.CourseGroup", null)
                        .WithMany()
                        .HasForeignKey("CourseGroupsCourseGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourYearClassPlanningTool.Models.Requirements.Entities.Degree", null)
                        .WithMany()
                        .HasForeignKey("DegreesDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
